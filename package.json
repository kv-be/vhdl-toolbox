{
	"name": "vhdl-toolbox",
	"publisher": "kv-be",
	"main": "./dist/lib/vscode.js",
	"version": "1.0.1",
	"description": "A toolbox for VHDL designers",
	"keywords": [],
	"engines": {
		"vscode": "^1.39.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/kv-be/vhdl-toolbox.git"
	},
	"icon": "vhdltoolbox.png",
	"contributes": {
  		"languages": [
			{
				"id": "vhdl",
				"aliases": [
					"VHDL",
					"vhdl"
				],
				"extensions": [
					".vhd",
					".vhdl",
					".vho",
					".vht"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "vhdl",
				"scopeName": "source.vhdl",
				"path": "./syntaxes/vhdl.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "vhdl",
				"path": "./snippets/snippets.json"
			}
		],
		"views": {
			"explorer": 
		     	[
				{
					"id": "HierarchyView",
					"name": "HierarchyView",
					"when": "vhdl-toolbox:showHierarchy"
				}

			]
		},
		"keybindings": [
			{
				"key": "ctrl+alt+c ctrl+alt+s",
				"command": "vhdl-toolbox:copy-as-signals",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+v i",
				"command": "vhdl-toolbox:instantiate",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+i",
				"command": "vhdl-toolbox:copy-as-instance",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+t",
				"command": "vhdl-toolbox:copy-tree",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+l",
				"command": "vhdl-toolbox:copy-file-listing",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+v d",
				"command": "vhdl-toolbox:add-signal",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+v m",
				"command": "vhdl-toolbox:add-attribute",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+v k",
				"command": "vhdl-toolbox:add-keep",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+v v",
				"command": "vhdl-toolbox:verilog2vhdl",
				"when": "editorLangId == vhdl"
			},
			{
				"key": "ctrl+alt+v e",
				"command": "vhdl-toolbox:declare-enum-type",
				"when": "editorLangId == vhdl"
			}
		],
		"menus": {
			"vhdltoolbox/main": [
				{
					"command": "vhdl-toolbox:add-signal",
					"group": "vhdl_toolbox@1",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:add-attribute",
					"group": "vhdl_toolbox@1",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:add-keep",
					"when": "editorLangId == vhdl",
					"group": "vhdl_toolbox@1"
				},
				{
					"command": "vhdl-toolbox:verilog2vhdl",
					"group": "vhdl_toolbox@1",
					"when": "editorHasSelection && editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:declare-enum-type",
					"group": "vhdl_toolbox@1",
					"when": "editorHasSelection && editorLangId == vhdl"
				}
			],
			"editor/context": [
				{
					"submenu": "vhdltoolbox/main",
					"group": "vhdltools@2",
					"when": "editorLangId == vhdl"
				}
			],
			"view/item/context": [
				{
					"command": "HierarchyView.open",
					"when": "view == HierarchyView"
				},
				{
					"command": "HierarchyView.getPath",
					"when": "view == HierarchyView"
				}
			],
			"commandPalette": [
				{
					"command": "vhdl-toolbox:copy-as-instance",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:copy-as-signals",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:instantiate",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:copy-tree",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:copy-file-listing",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:add-signal",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:add-attribute",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:add-keep",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:verilog2vhdl",
					"when": "editorLangId == vhdl"
				},
				{
					"command": "vhdl-toolbox:declare-enum-type",
					"when": "editorLangId == vhdl"
				}			
			]
		},
		"submenus": [
			{
				"id": "vhdltoolbox/main",
				"label": "VHDL Toolbox"
			}
		],
		"commands": [
			{
				"command": "HierarchyView.open",
				"title": "Open"
			},
			{
				"command": "HierarchyView.getPath",
				"title": "Get Path"
			},
			{
				"command": "vhdl-toolbox:copy-as-instance",
				"title": "Copy as Instance"
			},
			{
				"command": "vhdl-toolbox:copy-as-signals",
				"title": "Copy as Signals"
			},
			{
				"command": "vhdl-toolbox:instantiate",
				"title": "Instantiate an entity"
			},
			{
				"command": "vhdl-toolbox:copy-tree",
				"title": "Copy Vhdl Tree"
			},
			{
				"command": "vhdl-toolbox:copy-file-listing",
				"title": "Copy File Listing"
			},
			{
				"command": "vhdl-toolbox:add-attribute",
				"title": "Add mark_debug"
			},
			{
				"command": "vhdl-toolbox:add-keep",
				"title": "Add keep attribute"
			},
			{
				"command": "vhdl-toolbox:declare-enum-type",
				"title": "Declare an enum type based on a case"
			},
			{
				"command": "vhdl-toolbox:verilog2vhdl",
				"title": "Convert verilog module to VHDL instantiation"
			},
			{
				"command": "vhdl-toolbox:add-signal",
				"title": "Add declaration"
			}
		],
		"configuration": {
			"type": "object",
			"title": "vhdl-toolbox",
			"properties": {
				"VHDLToolbox.CheckCodingRules": {
					"type": "boolean",
					"default": true,
					"description": ""
				},
				"VHDLToolbox.CheckProcessReset": {
					"type": "boolean",
					"default": true,
					"description": ""
				},
				"VHDLToolbox.CheckStdLogicArith": {
					"type": "boolean",
					"default": true,
					"description": ""
				},
				"VHDLToolbox.ShowProcessesInOutline": {
					"type": "boolean",
					"default": false,
					"description": ""
				},
				"VHDLToolbox.PathsToPartiallyCheck": {
					"type": "string",
					"default": "",
					"description": "Pattern to select paths/files which are only parsed on the interface. This is typically used for external IP or libraries."
				},
				"VHDLToolbox.IgnorePattern": {
					"type": "string",
					"default": "",
					"description": "Pattern selecting files which are not parsed."
				},
				"VHDLToolbox.ToplevelSelectPattern": {
					"type": "string",
					"default": "",
					"description": "Pattern selecting files which are considered as toplevels."
				},
				"VHDLToolbox.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VS Code and the language server."
				}
			}
		}
	},

	"activationEvents": [
		"onLanguage:vhdl", "onView:HierarchyView"
	],
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc --project .",
		"watch": "tsc -w  --project  .",
		"lint": "tslint --project .",
		"test": "node dist/test/test.js"
	},
	"husky": {
		"hooks": {
			"post-merge": "npm ci && npm run compile && echo '#####################\nRestart Atom\n#####################'"
		}
	},
	"dependencies": {
		"chokidar": "^3.2.2",
		"escape-string-regexp": "^2.0.0",
		"globby": "^12.0.2",
		"string-similarity": "^3.0.0",
		"vscode-languageclient": "^5.2.1",
		"vscode-languageserver": "^5.2.1",
		"vscode-uri": "^3.0.2"
	},
	"enhancedScopes": [
		"source.vhdl"
	],
	"package-deps": [],
	"providedServices": {},
	"consumedServices": {},
	"devDependencies": {
		"@types/blessed": "^0.1.11",
		"@types/chokidar": "^2.1.3",
		"@types/colors": "^1.2.1",
		"@types/glob": "^7.1.1",
		"@types/node": "^10.12.0",
		"@types/prettyjson": "0.0.28",
		"@types/string-similarity": "^3.0.0",
		"@types/vscode": "^1.39.0",
		"blessed": "^0.1.81",
		"husky": "^1.1.2",
		"json-diff": "^0.5.4",
		"prettyjson": "^1.2.1",
		"tslint": "^5.20.1",
		"tslint-microsoft-contrib": "^5.2.1",
		"typescript": "^3.8.3",
		"vsce": "^1.88.0",
		"vscode-languageserver-types": "^3.14.0"
	}
}
